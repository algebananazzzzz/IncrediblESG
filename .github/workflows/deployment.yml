name: Deployment
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      env:
        description: The target environment for deployment
        type: string
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '18.x'
      - working-directory: backend/src
        run:  npm install 
      - working-directory: backend/src
        run: ./node_modules/.bin/esbuild index.js --platform=node --bundle --outfile=../build/index.js
      - uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: backend/build
  deploy:
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
      - uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: build
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ vars.AWS_REGION }}
      - run: echo "ENV=${{ inputs.env > '' && inputs.env || 'dev' }}" >> $GITHUB_ENV
      - run: ls -aln
      - run: ls -aln backend
      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.7.5"
      - name: Terraform Init
        id: init
        working-directory: backend/infra
        run: terraform init -input=false
      - name: Terraform Workspace
        working-directory: backend/infra
        run: terraform workspace select -or-create $ENV-webappdb
      - name: Terraform Plan
        id: plan
        working-directory: backend/infra
        run: terraform plan --var-file=config/$ENV.tfvars -out=output.tfplan -input=false
      - name: Terraform Apply
        id: apply
        working-directory: backend/infra
        run: terraform apply -input=false --auto-approve output.tfplan
